#include "stdafx.h"
#include "io.h"
#include "CryptoState.h"
#include <string>


int main(int argc, char* argv[]){

	unsigned char root_crypto_blob[148] = {
		0x54, 0x19, 0x31, 0x3E, 0xF4, 0x6B, 0xE4, 0x24, 0xCD, 0xA7, 0x96, 0x6F,	0xAB, 0xF0, 0x69, 0xCA,
		0x00, 0x00, 0x80, 0xBF, 0xEC, 0x3B, 0x9D, 0xA1, 0x46, 0x0C, 0xDD, 0x33,	0xF3, 0xD2, 0x58, 0xE0,
		0xC0, 0x9F, 0xC7, 0xD4, 0xF6, 0xEF, 0xDC, 0x70, 0x92, 0x6F, 0x52, 0xD8, 0xF1, 0xBD, 0x54, 0x36,
		0xA2, 0xCB, 0xAC, 0xA3, 0x99, 0xFC, 0xC8, 0xD2, 0xA9, 0x61, 0x72, 0x6B, 0xD7, 0x8D, 0x15, 0xB8,
		0x80, 0xAC, 0xA0, 0xB5, 0x9A, 0xA0, 0xEE, 0x1E, 0x8B, 0xF5, 0xD9, 0xDA, 0x2C, 0x92, 0xAE, 0xB4,
		0x9D, 0x92, 0xE0, 0x79, 0xAA, 0x76, 0x55, 0x31, 0xBC, 0xE3, 0x02, 0x00, 0x7A, 0xB9, 0x53, 0x7F,
		0xE2, 0x60, 0xF5, 0x26, 0x2B, 0x1E, 0x7D, 0xA7, 0x5D, 0xD1, 0xBD, 0x84, 0x23, 0x3B, 0xE4, 0x32,
		0x33, 0x03, 0xA4, 0x81, 0x84, 0x98, 0x97, 0xAB, 0x63, 0x7A, 0x82, 0x25, 0x39, 0x9F, 0xC0, 0x73,
		0x49, 0x63, 0x94, 0xFD, 0xD8, 0xDE, 0xA8, 0xC8, 0xB0, 0x36, 0x52, 0xCD, 0x07, 0xD6, 0xA2, 0x0A,
		0xF2, 0x00, 0x8C, 0x62
	};

	unsigned char* savedata_encr = new unsigned char[SAVEDATA_SIZE];
	unsigned char* savedata_clear = new unsigned char[SAVEDATA_SIZE];

	printf("----------------------------------------------\n");
	printf("Nioh Savedata decryption/encryption tool by B3.\n");
	printf("Tool version: 1.0\n");
	printf("Developed for game version 1.21.02\n");
	printf("----------------------------------------------\n\n");


	if (argc == 1) {
		printf("No input file specified. \n\nPress Enter To Exit...\n");
		std::cin.ignore();
		exit(1);
	}
	if (!io::parse_savefile(argv[1], savedata_encr, SAVEDATA_SIZE)) {
		printf("Failed to read file. \n\nPress Enter To Exit...\n");
		std::cin.ignore();
		exit(1);
	}


	CryptoState cs(root_crypto_blob);
	if (!cs.decrypt(savedata_encr, savedata_clear)) {
		printf("\n\nDecryption failed. \n\nPress Enter To Exit...\n");
	}
	else {
		io::save_decrypted_savefile(std::string(argv[1]), savedata_clear, SAVEDATA_SIZE);
		printf("success! \n\nPress Enter To Exit...\n");
	}

	delete[] savedata_encr;
	delete[] savedata_clear;

	std::cin.ignore();
	return 0;
}

